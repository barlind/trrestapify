{"version":3,"file":"index.esm.js","sources":["../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/typeof.js","../node_modules/@babel/runtime/helpers/regeneratorRuntime.js","../node_modules/@babel/runtime/regenerator/index.js","../src/const.ts","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../src/utils.ts","../src/forLoopHelpers.ts","../src/getRoute.ts","../src/internalApi.ts","../src/Restapify.ts","../src/cli/utils.ts","../src/cli/run/listRoutes.ts","../src/cli/run/startServer.ts","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../src/cli/run/startServerFromConfig.ts","../src/cli/cli.ts","../src/index.ts"],"sourcesContent":["function _arrayWithHoles(r) {\n  if (Array.isArray(r)) return r;\n}\nexport { _arrayWithHoles as default };","function _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nexport { _iterableToArrayLimit as default };","function _arrayLikeToArray(r, a) {\n  (null == a || a > r.length) && (a = r.length);\n  for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n  return n;\n}\nexport { _arrayLikeToArray as default };","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _unsupportedIterableToArray(r, a) {\n  if (r) {\n    if (\"string\" == typeof r) return arrayLikeToArray(r, a);\n    var t = {}.toString.call(r).slice(8, -1);\n    return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? arrayLikeToArray(r, a) : void 0;\n  }\n}\nexport { _unsupportedIterableToArray as default };","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableRest as default };","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nfunction _slicedToArray(r, e) {\n  return arrayWithHoles(r) || iterableToArrayLimit(r, e) || unsupportedIterableToArray(r, e) || nonIterableRest();\n}\nexport { _slicedToArray as default };","function asyncGeneratorStep(n, t, e, r, o, a, c) {\n  try {\n    var i = n[a](c),\n      u = i.value;\n  } catch (n) {\n    return void e(n);\n  }\n  i.done ? t(u) : Promise.resolve(u).then(r, o);\n}\nfunction _asyncToGenerator(n) {\n  return function () {\n    var t = this,\n      e = arguments;\n    return new Promise(function (r, o) {\n      var a = n.apply(t, e);\n      function _next(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"next\", n);\n      }\n      function _throw(n) {\n        asyncGeneratorStep(a, r, o, _next, _throw, \"throw\", n);\n      }\n      _next(void 0);\n    });\n  };\n}\nexport { _asyncToGenerator as default };","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, _typeof(o);\n}\nexport { _typeof as default };","import _typeof from \"./typeof.js\";\nfunction toPrimitive(t, r) {\n  if (\"object\" != _typeof(t) || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != _typeof(i)) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nexport { toPrimitive as default };","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nfunction toPropertyKey(t) {\n  var i = toPrimitive(t, \"string\");\n  return \"symbol\" == _typeof(i) ? i : i + \"\";\n}\nexport { toPropertyKey as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(e, r) {\n  for (var t = 0; t < r.length; t++) {\n    var o = r[t];\n    o.enumerable = o.enumerable || !1, o.configurable = !0, \"value\" in o && (o.writable = !0), Object.defineProperty(e, toPropertyKey(o.key), o);\n  }\n}\nfunction _createClass(e, r, t) {\n  return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, \"prototype\", {\n    writable: !1\n  }), e;\n}\nexport { _createClass as default };","function _classCallCheck(a, n) {\n  if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _classCallCheck as default };","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperty(e, r, t) {\n  return (r = toPropertyKey(r)) in e ? Object.defineProperty(e, r, {\n    value: t,\n    enumerable: !0,\n    configurable: !0,\n    writable: !0\n  }) : e[r] = t, e;\n}\nexport { _defineProperty as default };","function _typeof(o) {\n  \"@babel/helpers - typeof\";\n\n  return module.exports = _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports, _typeof(o);\n}\nmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var _typeof = require(\"./typeof.js\")[\"default\"];\nfunction _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n    return e;\n  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  var t,\n    e = {},\n    r = Object.prototype,\n    n = r.hasOwnProperty,\n    o = Object.defineProperty || function (t, e, r) {\n      t[e] = r.value;\n    },\n    i = \"function\" == typeof Symbol ? Symbol : {},\n    a = i.iterator || \"@@iterator\",\n    c = i.asyncIterator || \"@@asyncIterator\",\n    u = i.toStringTag || \"@@toStringTag\";\n  function define(t, e, r) {\n    return Object.defineProperty(t, e, {\n      value: r,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), t[e];\n  }\n  try {\n    define({}, \"\");\n  } catch (t) {\n    define = function define(t, e, r) {\n      return t[e] = r;\n    };\n  }\n  function wrap(t, e, r, n) {\n    var i = e && e.prototype instanceof Generator ? e : Generator,\n      a = Object.create(i.prototype),\n      c = new Context(n || []);\n    return o(a, \"_invoke\", {\n      value: makeInvokeMethod(t, r, c)\n    }), a;\n  }\n  function tryCatch(t, e, r) {\n    try {\n      return {\n        type: \"normal\",\n        arg: t.call(e, r)\n      };\n    } catch (t) {\n      return {\n        type: \"throw\",\n        arg: t\n      };\n    }\n  }\n  e.wrap = wrap;\n  var h = \"suspendedStart\",\n    l = \"suspendedYield\",\n    f = \"executing\",\n    s = \"completed\",\n    y = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var p = {};\n  define(p, a, function () {\n    return this;\n  });\n  var d = Object.getPrototypeOf,\n    v = d && d(d(values([])));\n  v && v !== r && n.call(v, a) && (p = v);\n  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(p);\n  function defineIteratorMethods(t) {\n    [\"next\", \"throw\", \"return\"].forEach(function (e) {\n      define(t, e, function (t) {\n        return this._invoke(e, t);\n      });\n    });\n  }\n  function AsyncIterator(t, e) {\n    function invoke(r, o, i, a) {\n      var c = tryCatch(t[r], t, o);\n      if (\"throw\" !== c.type) {\n        var u = c.arg,\n          h = u.value;\n        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n          invoke(\"next\", t, i, a);\n        }, function (t) {\n          invoke(\"throw\", t, i, a);\n        }) : e.resolve(h).then(function (t) {\n          u.value = t, i(u);\n        }, function (t) {\n          return invoke(\"throw\", t, i, a);\n        });\n      }\n      a(c.arg);\n    }\n    var r;\n    o(this, \"_invoke\", {\n      value: function value(t, n) {\n        function callInvokeWithMethodAndArg() {\n          return new e(function (e, r) {\n            invoke(t, n, e, r);\n          });\n        }\n        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(e, r, n) {\n    var o = h;\n    return function (i, a) {\n      if (o === f) throw Error(\"Generator is already running\");\n      if (o === s) {\n        if (\"throw\" === i) throw a;\n        return {\n          value: t,\n          done: !0\n        };\n      }\n      for (n.method = i, n.arg = a;;) {\n        var c = n.delegate;\n        if (c) {\n          var u = maybeInvokeDelegate(c, n);\n          if (u) {\n            if (u === y) continue;\n            return u;\n          }\n        }\n        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n          if (o === h) throw o = s, n.arg;\n          n.dispatchException(n.arg);\n        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n        o = f;\n        var p = tryCatch(e, r, n);\n        if (\"normal\" === p.type) {\n          if (o = n.done ? s : l, p.arg === y) continue;\n          return {\n            value: p.arg,\n            done: n.done\n          };\n        }\n        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(e, r) {\n    var n = r.method,\n      o = e.iterator[n];\n    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n    var i = tryCatch(o, e.iterator, r.arg);\n    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n    var a = i.arg;\n    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n  }\n  function pushTryEntry(t) {\n    var e = {\n      tryLoc: t[0]\n    };\n    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), this.tryEntries.push(e);\n  }\n  function resetTryEntry(t) {\n    var e = t.completion || {};\n    e.type = \"normal\", delete e.arg, t.completion = e;\n  }\n  function Context(t) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], t.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(e) {\n    if (e || \"\" === e) {\n      var r = e[a];\n      if (r) return r.call(e);\n      if (\"function\" == typeof e.next) return e;\n      if (!isNaN(e.length)) {\n        var o = -1,\n          i = function next() {\n            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n            return next.value = t, next.done = !0, next;\n          };\n        return i.next = i;\n      }\n    }\n    throw new TypeError(_typeof(e) + \" is not iterable\");\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), o(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n    var e = \"function\" == typeof t && t.constructor;\n    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n  }, e.mark = function (t) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = Object.create(g), t;\n  }, e.awrap = function (t) {\n    return {\n      __await: t\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n    return this;\n  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n    void 0 === i && (i = Promise);\n    var a = new AsyncIterator(wrap(t, r, n, o), i);\n    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n      return t.done ? t.value : a.next();\n    });\n  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n    return this;\n  }), define(g, \"toString\", function () {\n    return \"[object Generator]\";\n  }), e.keys = function (t) {\n    var e = Object(t),\n      r = [];\n    for (var n in e) r.push(n);\n    return r.reverse(), function next() {\n      for (; r.length;) {\n        var t = r.pop();\n        if (t in e) return next.value = t, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, e.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(e) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, this.tryEntries.forEach(resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+r.slice(1)) && (this[r] = t);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var t = this.tryEntries[0].completion;\n      if (\"throw\" === t.type) throw t.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(e) {\n      if (this.done) throw e;\n      var r = this;\n      function handle(n, o) {\n        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n      }\n      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n        var i = this.tryEntries[o],\n          a = i.completion;\n        if (\"root\" === i.tryLoc) return handle(\"end\");\n        if (i.tryLoc <= this.prev) {\n          var c = n.call(i, \"catchLoc\"),\n            u = n.call(i, \"finallyLoc\");\n          if (c && u) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          } else if (c) {\n            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n          } else {\n            if (!u) throw Error(\"try statement without catch or finally\");\n            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(t, e) {\n      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n        var o = this.tryEntries[r];\n        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n          var i = o;\n          break;\n        }\n      }\n      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n      var a = i ? i.completion : {};\n      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n    },\n    complete: function complete(t, e) {\n      if (\"throw\" === t.type) throw t.arg;\n      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n    },\n    finish: function finish(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n      }\n    },\n    \"catch\": function _catch(t) {\n      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n        var r = this.tryEntries[e];\n        if (r.tryLoc === t) {\n          var n = r.completion;\n          if (\"throw\" === n.type) {\n            var o = n.arg;\n            resetTryEntry(r);\n          }\n          return o;\n        }\n      }\n      throw Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(e, r, n) {\n      return this.delegate = {\n        iterator: values(e),\n        resultName: r,\n        nextLoc: n\n      }, \"next\" === this.method && (this.arg = t), y;\n    }\n  }, e;\n}\nmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","// TODO(Babel 8): Remove this file.\n\nvar runtime = require(\"../helpers/regeneratorRuntime\")();\nmodule.exports = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n","import { HttpVerb, CastingOperator } from './types'\n\nexport const CURRENT_LOCATION_ROUTE_SELECTOR = '_'\nexport const HTTP_VERBS: HttpVerb[] = ['GET', 'POST', 'PUT', 'PATCH', 'DELETE']\nexport const INTERNAL_BASEURL = '/restapify'\nexport const INTERNAL_API_BASEURL = `${INTERNAL_BASEURL}/api`\n\nexport const CASTING_OPERATORS: CastingOperator[] = ['number', 'boolean']\nexport const NUMBER_CAST_INDICATOR = 'n:'\nexport const BOOLEAN_CAST_INDICATOR = 'b:'\n\nexport const EMPTY_BODY_SYNTAX = [null]\nexport const HEADER_SYNTAX = '#header'\nexport const BODY_SYNTAX = '#body'\n\nexport const QUERY_STRING_VAR_MATCHER = /\\[q:(.*?)\\]/g\nexport const QS_VAR_DEFAULT_SEPARATOR = '|'\n\n// eslint-disable-next-line max-len\nexport const FOR_LOOP_SYNTAX_MATCHER = /\"#for ((?:(?!\"#for .*? in .*?\",|\"#endfor\").)*?) in ((?:(?!\"#for .*? in .*?\",|\"#endfor\").)*?)\",((?:(?!#for .*? in .*?\",|\"#endfor\").)*?),\"#endfor\"/g\nexport const FOR_LOOP_SYNTAX_PREFIX = '#for'\nexport const FOR_LOOP_SYNTAX_SUFFIX = '#endfor'\n","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nfunction _arrayWithoutHoles(r) {\n  if (Array.isArray(r)) return arrayLikeToArray(r);\n}\nexport { _arrayWithoutHoles as default };","function _iterableToArray(r) {\n  if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nexport { _iterableToArray as default };","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _nonIterableSpread as default };","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nfunction _toConsumableArray(r) {\n  return arrayWithoutHoles(r) || iterableToArray(r) || unsupportedIterableToArray(r) || nonIterableSpread();\n}\nexport { _toConsumableArray as default };","import * as fs from 'fs'\nimport * as path from 'path'\n\nimport {\n  BOOLEAN_CAST_INDICATOR, CASTING_OPERATORS, HTTP_VERBS, NUMBER_CAST_INDICATOR\n} from './const'\nimport { HttpVerb } from './types'\nimport { Routes } from './Restapify'\n\nexport const getDirs = (p: string): string[] => {\n  return fs.readdirSync(p).filter(f => fs.statSync(path.join(p, f)).isDirectory())\n}\n\nexport const getFiles = (p: string): string[] => {\n  return fs.readdirSync(p).filter(f => fs.statSync(path.join(p, f)).isFile())\n}\n\nexport const replaceAll = (str: string, find: string, replace: string): string => {\n  return str.split(find).join(replace)\n}\n\nexport const getVarsInPath = (pathParam: string): string[] => {\n  const vars: string[] = []\n\n  if (pathParam.endsWith('.json')) {\n    pathParam = pathParam.slice(0, -'.json'.length)\n  }\n\n  const explodedPath = pathParam.split('/')\n\n  explodedPath.forEach(pathElement => {\n    const isVar = pathElement.startsWith('[') && pathElement.endsWith(']')\n    if (isVar) {\n      vars.push(pathElement.slice(1, -1))\n    }\n  })\n\n  return vars\n}\n\nexport const isHttpVerb = (str: string): boolean => {\n  // @ts-ignore\n  return HTTP_VERBS.includes(str)\n}\n\nexport const isStateVariable = (str: string): boolean => {\n  return str.startsWith('{') && str.endsWith('}')\n}\n\nexport const isNumeric = (str:string):boolean=> {\n  return !Number.isNaN(str) // use type coercion to parse the _entirety_ of the string (`parseFloat` alone does not do this)...\n         && !Number.isNaN(parseFloat(str)) // ...and ensure strings of whitespace fail\n}\n\nexport const routeResolve = (...routes: string[]): string => {\n  let finalRoute = ''\n\n  routes.forEach((route, routeId) => {\n    const hasPreviousRouteFinalSlash = !!routes[routeId - 1]?.endsWith('/')\n    const hasRouteFirstSlash = route.startsWith('/')\n\n    if (hasPreviousRouteFinalSlash && hasRouteFirstSlash) {\n      finalRoute += route.slice(1)\n    } else if (!hasPreviousRouteFinalSlash && !hasRouteFirstSlash) {\n      finalRoute += '/' + route\n    } else {\n      finalRoute += route\n    }\n  })\n\n  return finalRoute\n}\n\nexport const withoutUndefinedFromObject = (obj: Object): Object => {\n  // @ts-ignore\n  Object.keys(obj).forEach(key => obj[key] === undefined && delete obj[key])\n  return obj\n}\n\ninterface OrderedRoutes {\n  route: string,\n  method: HttpVerb\n}\nexport const getRoutesByFileOrder = (routes: Routes): OrderedRoutes[] => {\n  const orderedRoutes: OrderedRoutes[] = []\n  let routesLink: string[] = []\n\n  HTTP_VERBS.forEach(method => {\n    routesLink = [...routesLink, ...Object.keys(routes[method])]\n  })\n\n  // remove duplicates and sort\n  routesLink = [...new Set(routesLink)].sort()\n\n  routesLink.forEach(routeLink => {\n    HTTP_VERBS.forEach(method => {\n      if (routes[method][routeLink]) {\n        orderedRoutes.push({ method, route: routeLink })\n      }\n    })\n  })\n\n  return orderedRoutes\n}\n\nexport const getRouteFiles = (\n  rootDir: string,\n  files: {[filename: string]: string} = {}\n): {[filename: string]: string} => {\n  const dirNames = getDirs(rootDir)\n  const fileNames = getFiles(rootDir)\n\n  fileNames.forEach(filename => {\n    const isJson = filename.endsWith('.json')\n    if (isJson) {\n      const filePath = path.resolve(rootDir, filename)\n      files[filePath] = fs.readFileSync(filePath, 'utf8')\n    }\n  })\n\n  dirNames.forEach(dir => {\n    return getRouteFiles(path.resolve(rootDir, dir), files)\n  })\n\n  return files\n}\n\nexport const isJsonString = (str: string): true | string => {\n  try {\n    JSON.parse(str)\n  } catch (e) {\n    return e.message\n  }\n\n  return true\n}\n\nexport const getVarCastSyntax = (variable: string, type: 'number' | 'boolean'):string => {\n  const typeCastIndicator = {\n    number: NUMBER_CAST_INDICATOR,\n    boolean: BOOLEAN_CAST_INDICATOR\n  }\n  return `\"${typeCastIndicator[type]}[${variable}]\"`\n}\n\nexport const replaceAllCastedVar = (content: string, variable: string, value: string): string => {\n  CASTING_OPERATORS.forEach((operator) => {\n    content = replaceAll(content, getVarCastSyntax(variable, operator), value)\n  })\n\n  return content\n}\n\nexport const getSortedRoutesSlug = (routesSlug: string[]): string[] => {\n  // By alphabetical order, a specific route comes before a route that contains a variable:\n  // ex: ['/animals/hedgehog', '/animals/[name]']\n  // But we want the route with the variable at the end\n  routesSlug.sort((a, b) => {\n    const splittedA = a.split('/')\n    const splittedB = b.split('/')\n\n    const lastASlugPart = splittedA[splittedA.length - 1]\n    const lastBSlugPart = splittedB[splittedB.length - 1]\n\n    const aPrefix = a.slice(0, a.length - lastASlugPart.length)\n    const bPrefix = b.slice(0, b.length - lastBSlugPart.length)\n    const areSlugsOnSameDeepness = splittedA.length === splittedB.length && aPrefix === bPrefix\n\n    if (areSlugsOnSameDeepness) {\n      const isAFinalSlugVar = lastASlugPart.endsWith(']')\n      const isBFinalSlugVar = lastBSlugPart.endsWith(']')\n\n      const isBMoreDeep = splittedA.length < splittedB.length\n\n      if ((!isAFinalSlugVar && isBFinalSlugVar) || isBMoreDeep) {\n        return -1\n      }\n    }\n\n    return 0\n  })\n\n  return routesSlug\n}\n","import range from 'lodash.range'\n\nimport { replaceAll, replaceAllCastedVar } from './utils'\nimport {\n  FOR_LOOP_SYNTAX_MATCHER,\n  FOR_LOOP_SYNTAX_PREFIX,\n  FOR_LOOP_SYNTAX_SUFFIX\n} from './const'\nimport { RestapifyErrorName } from './types'\n\nconst ELMT_BETWEEN_PARENTHESES_MATCHER = /\\(([^)]+)\\)/g\n\n// I N T E R F A C E S\n/*\nObject containing for loop syntax component like:\nfor x in sequence:\n     statements\n*/\nexport interface ForLoopSyntax {\n  x: string\n  sequence: string\n  statement: string\n}\nexport interface RangeFunctionParams {\n  start: number\n  end?: number\n  step?: number\n}\n\ninterface SequenceObject {\n  [key: string]: string | number | boolean;\n}\n\nexport const isStatementObjectValid = (obj: Record<string, any>): boolean => {\n  return Object.keys(obj).every(key => {\n    return typeof obj[key] === 'string'\n      || typeof obj[key] === 'number'\n      || typeof obj[key] === 'boolean'\n  })\n}\n\nexport const getForLoopSyntax = (forLoopObject: ForLoopSyntax): string => {\n  const { x, sequence, statement } = forLoopObject\n  return `\"${FOR_LOOP_SYNTAX_PREFIX} ${x} in ${sequence}\",${statement},\"${FOR_LOOP_SYNTAX_SUFFIX}\"`\n}\n\nexport const getForLoopSyntaxInContent = (content: string): ForLoopSyntax[] | undefined => {\n  const matches = [...content.matchAll(FOR_LOOP_SYNTAX_MATCHER)]\n\n  if (matches.length <= 0) {\n    return undefined\n  }\n\n  return matches.map(m => {\n    return {\n      x: m[1],\n      sequence: m[2],\n      statement: m[3]\n    }\n  })\n}\n\nexport const getStringifiedRangeFunctionParams = (\n  stringifiedRange: string\n): RangeFunctionParams | null => {\n  const paramsMatch = stringifiedRange.match(ELMT_BETWEEN_PARENTHESES_MATCHER)\n\n  if (paramsMatch === null) return null\n\n  const paramsMatchString = paramsMatch[0]\n\n  const splitedParams = paramsMatchString.substring(1, paramsMatchString.length - 1).split(',')\n\n  return {\n    start: Number(splitedParams[0]),\n    end: splitedParams[1] ? Number(splitedParams[1]) : undefined,\n    step: splitedParams[2] ? Number(splitedParams[2]) : undefined\n  }\n}\n\nexport const getArrayFromRangeString = (stringifiedRange: string): number[] => {\n  const rangeParams = getStringifiedRangeFunctionParams(stringifiedRange)\n\n  if (rangeParams) {\n    const { start, end, step } = rangeParams\n    return range(start, end, step)\n  }\n\n  return []\n}\n\n// eslint-disable-next-line max-len\nexport const getSequenceArrayAsArray = (sequence: string): (number | string | boolean | SequenceObject)[] => {\n  sequence = replaceAll(sequence, '\\'', '\"')\n  return JSON.parse(sequence)\n}\n\nexport const getSequenceArray = (sequence: string): (\n    number\n    | string\n    | boolean\n    | SequenceObject)[] => {\n  const isSequenceAnArray = sequence.startsWith('[') && sequence.endsWith(']')\n  const isSequenceRange = sequence.startsWith('range(') && sequence.endsWith(')')\n\n  if (isSequenceAnArray) {\n    return getSequenceArrayAsArray(sequence)\n  } if (isSequenceRange) {\n    return getArrayFromRangeString(sequence)\n  }\n\n  return []\n}\n\nexport const getForLoopSyntaxResult = (forLoopSyntax: ForLoopSyntax): string => {\n  const sequenceArray = getSequenceArray(forLoopSyntax.sequence)\n  let resultArray: string[] = []\n\n  sequenceArray.forEach(i => {\n    let forLoopResult = forLoopSyntax.statement\n\n    if (typeof i === 'object') {\n      const isStatementValid = isStatementObjectValid(i)\n      if (!isStatementValid) {\n        const error: RestapifyErrorName = 'INV:SYNTAX'\n        const errorObject = {\n          error,\n          message: `The object syntax ${JSON.stringify(i)} is not valid! Please refer to the documentation https://restapify.vercel.app/docs#for-loops-array-sequence`\n        }\n        throw new Error(JSON.stringify(errorObject))\n      } else {\n        Object.keys(i).forEach(key => {\n          forLoopResult = replaceAllCastedVar(\n            forLoopResult,\n            `${forLoopSyntax.x}.${key}`,\n            i[key].toString()\n          )\n          forLoopResult = replaceAll(forLoopResult, `[${forLoopSyntax.x}.${key}]`, (i as SequenceObject)[key].toString())\n        })\n      }\n    } else {\n      forLoopResult = replaceAllCastedVar(\n        forLoopResult,\n        forLoopSyntax.x,\n        i.toString()\n      )\n\n      forLoopResult = replaceAll(forLoopResult, `[${forLoopSyntax.x}]`, i.toString())\n    }\n    resultArray.push(forLoopResult)\n  })\n\n  return resultArray.join(',')\n}\n\nexport const getContentWithReplacedForLoopsSyntax = (content: string): string => {\n  const forLoops = getForLoopSyntaxInContent(content)\n\n  if (!forLoops) {\n    return content\n  }\n\n  forLoops.forEach((forLoop) => {\n    const forLoopSyntax = getForLoopSyntax(forLoop)\n    content = content.replace(forLoopSyntax, getForLoopSyntaxResult(forLoop))\n  })\n\n  return getContentWithReplacedForLoopsSyntax(content)\n}\n","import { HttpVerb, JsonRouteFileContent } from './types'\nimport * as path from 'path';\nimport {\n  CURRENT_LOCATION_ROUTE_SELECTOR,\n  HEADER_SYNTAX,\n  BODY_SYNTAX,\n  EMPTY_BODY_SYNTAX,\n  QUERY_STRING_VAR_MATCHER,\n  QS_VAR_DEFAULT_SEPARATOR\n} from './const'\nimport {\n  getVarsInPath,\n  isHttpVerb,\n  isNumeric,\n  isStateVariable,\n  replaceAll,\n  replaceAllCastedVar\n} from './utils'\nimport { getContentWithReplacedForLoopsSyntax } from './forLoopHelpers'\n\n// I N T E R F A C E S\nexport interface Route {\n  directoryPath: string\n  route: string\n  normalizedRoute: string\n  routeVars: string[]\n  filename: string\n  fileContent: string\n  method: HttpVerb\n  statusCode: number\n  stateVariable?: string\n  isExtended: boolean\n  header?: { [key: string]: string | number }\n  body?: JsonRouteFileContent\n  getBody: (vars: { [key: string]: string },\n    queryStringVars?: { [key: string]: string }\n  ) => JsonRouteFileContent | undefined\n  states?: {\n    [state: string]: Pick<Route, 'fileContent'\n      | 'statusCode'\n      | 'header'\n      | 'body'\n      | 'isExtended'\n      | 'getBody'\n    >\n  }\n}\nexport interface QueryStringVarData {\n  variable: string\n  defaultValue?: string\n}\n\nexport const getQueryStringVarSyntax = (data: QueryStringVarData): string => {\n  const { variable, defaultValue } = data\n\n  if (defaultValue) return `[q:${variable}|${defaultValue}]`\n  return `[q:${variable}]`\n}\n\nexport const getFilenameFromFilePath = (filePath: string): string => {\n  filePath = filePath.replace(/\\\\/g, '/')\n  const [filename] = filePath.split('/').slice(-1)\n\n  return filename\n}\n\nexport const getRouteFromFilePath = (filePath: string): string => {\n  filePath = filePath.replace(/\\\\/g, '/')\n  const filename = getFilenameFromFilePath(filePath)\n  const routeWithoutFilename = filePath.replace(filename, '')\n  const firstParamInFilename = filename.split('.')[0]\n\n  if (firstParamInFilename === CURRENT_LOCATION_ROUTE_SELECTOR) {\n    // remove last char which is a `/`\n    return routeWithoutFilename.slice(0, -1)\n  }\n\n  return routeWithoutFilename + firstParamInFilename\n}\n\nexport const getNormalizedRoute = (route: string, vars: string[] = []): string => {\n  vars.forEach(variable => {\n    route = replaceAll(route, `[${variable}]`, `:${variable}`)\n  })\n\n  return route\n}\n\nexport const getResponseStatusCodeInFilename = (filename: string): number => {\n  const filenameElmts = filename.split('.')\n  let potentialStatusCodeElement = filenameElmts.slice(1, -1) // remove local indicator and file extension\n\n  while (potentialStatusCodeElement.length > 0) {\n    const elmtToTest = potentialStatusCodeElement[0]\n    if (isHttpVerb(elmtToTest) || isStateVariable(elmtToTest)) {\n      potentialStatusCodeElement = potentialStatusCodeElement.slice(1)\n    } else {\n      if (isNumeric(elmtToTest)) {\n        return Number(elmtToTest)\n      }\n      potentialStatusCodeElement = potentialStatusCodeElement.slice(1)\n    }\n  }\n\n  return 200\n}\n\nexport const getStateVariableInFilename = (filename: string): string | undefined => {\n  let stateVariable: string | undefined\n  const explodedFilename = filename.split('.')\n\n  explodedFilename.forEach(filenameElement => {\n    const isStateVar = filenameElement.startsWith('{') && filenameElement.endsWith('}')\n\n    if (isStateVar) {\n      stateVariable = filenameElement.slice(1, -1)\n    }\n  })\n\n  return stateVariable\n}\n\nexport const getHttpMethodInFilename = (filename: string): HttpVerb => {\n  const filenameElmts = filename.split('.')\n  let potentialHttpVerbElement = filenameElmts.slice(1, -1) // remove local indicator and file extension\n  let httpVerb: HttpVerb = 'GET'\n\n  potentialHttpVerbElement.forEach(elmt => {\n    if (isHttpVerb(elmt)) {\n      httpVerb = elmt as HttpVerb\n    }\n  })\n\n  return httpVerb\n}\n\nexport const getQueryStringVarData = (queryStringSyntax: string): QueryStringVarData => {\n  const [variable, defaultValue] = queryStringSyntax.split(QS_VAR_DEFAULT_SEPARATOR)\n  return {\n    variable: variable,\n    defaultValue\n  }\n}\n\nexport const getQueryStringVarsInContent = (content: string): QueryStringVarData[] => {\n  // In string `[q:startIndex|0], [q:size]` it will find `['startIndex|0', 'size']`\n  const matchingVars = Array.from(content.matchAll(QUERY_STRING_VAR_MATCHER), m => m[1])\n\n  return matchingVars.map((variable) => {\n    return getQueryStringVarData(variable)\n  })\n}\n\nexport const getContentWithReplacedVars = (\n  content: string,\n  vars: { [key: string]: string },\n  queryStringVars?: { [key: string]: string }\n): string => {\n  const getEscapedVar = (variable: string): string => {\n    return `\\`[${variable}]\\``\n  }\n\n  const getVarsToEscape = (): string[] => {\n    return Object.keys(vars).filter(variable => {\n      return content.includes(getEscapedVar(variable))\n    })\n  }\n\n  const varsToEscape = getVarsToEscape()\n\n  const getContentWithSanitizedEscapedVars = (contentToSanitize: string): string => {\n    varsToEscape.forEach(escapedVar => {\n      contentToSanitize = replaceAll(\n        contentToSanitize,\n        getEscapedVar(escapedVar),\n        getEscapedVar(`__${escapedVar}__`)\n      )\n    })\n\n    return contentToSanitize\n  }\n\n  const getContentWithUnsanitizedEscapedVars = (contentToUnsanitize: string): string => {\n    varsToEscape.forEach(escapedVar => {\n      contentToUnsanitize = replaceAll(\n        contentToUnsanitize,\n        getEscapedVar(`__${escapedVar}__`),\n        `[${escapedVar}]`\n      )\n    })\n\n    return contentToUnsanitize\n  }\n\n  // sanitize variables to escape\n  content = getContentWithSanitizedEscapedVars(content)\n\n  Object.keys(vars).forEach((variable) => {\n    // replace casted variables\n    content = replaceAllCastedVar(content, variable, vars[variable])\n    // replace simple variables\n    content = replaceAll(content, `[${variable}]`, vars[variable])\n  })\n\n  if (queryStringVars) {\n    const queryStringVarsInContent = getQueryStringVarsInContent(content)\n    queryStringVarsInContent.forEach(({ variable, defaultValue }) => {\n      const replaceValue = queryStringVars[variable] || defaultValue\n\n      // if there is no query string in request and no default value for it\n      // don't replace anything\n      if (replaceValue) {\n        content = replaceAll(\n          content,\n          getQueryStringVarSyntax({ variable, defaultValue }),\n          replaceValue\n        )\n      }\n    })\n  }\n\n  // unsanitize variables to escape\n  content = getContentWithUnsanitizedEscapedVars(content)\n\n  return content\n}\n\nexport const isStructureExtended = (jsonContent: { [key: string]: any }): boolean => {\n  return jsonContent[HEADER_SYNTAX] !== undefined || jsonContent[BODY_SYNTAX] !== undefined\n}\n\nexport const isBodyEmpty = (body: JsonRouteFileContent): boolean => {\n  const stringifiedEmptyBodySyntax = JSON.stringify(EMPTY_BODY_SYNTAX)\n\n  if (JSON.stringify(body) === stringifiedEmptyBodySyntax) return true\n\n  if (body[BODY_SYNTAX]) {\n    return JSON.stringify(body[BODY_SYNTAX]) === stringifiedEmptyBodySyntax\n      || body[BODY_SYNTAX] === stringifiedEmptyBodySyntax\n  }\n\n  return false\n}\n\nexport const getRoute = (\n  filePath: string,\n  entryFolderPath: string,\n  fileContent: string\n): Route => {\n  // relative to the entry folder\n  const relativeFilePath = filePath.replace(entryFolderPath, '')\n  const filename = getFilenameFromFilePath(relativeFilePath)\n  const route = getRouteFromFilePath(relativeFilePath)\n  const routeVars = getVarsInPath(route)\n  const normalizedRoute = getNormalizedRoute(route, routeVars)\n  const jsonContent = JSON.parse(fileContent)\n  const stateVariable = getStateVariableInFilename(filename)\n  const statusCode = getResponseStatusCodeInFilename(filename)\n  const method = getHttpMethodInFilename(filename)\n  const directoryPath = path.dirname(filePath);\n\n  const isExtended = isStructureExtended(jsonContent)\n\n  const header = jsonContent[HEADER_SYNTAX]\n\n  const getBodyValue = (): JsonRouteFileContent | undefined => {\n    if (isBodyEmpty(jsonContent)) return undefined\n\n    return isExtended\n      ? jsonContent[BODY_SYNTAX]\n      : jsonContent\n  }\n\n  const body = getBodyValue()\n\n  const getBody = (\n    varsToReplace?: { [key: string]: string },\n    queryStringVarsToReplace?: { [key: string]: string }\n  ): JsonRouteFileContent | undefined => {\n    if (body) {\n      let bodyAsString = JSON.stringify(body)\n\n      if (varsToReplace) {\n        bodyAsString = getContentWithReplacedVars(\n          bodyAsString,\n          varsToReplace,\n          queryStringVarsToReplace\n        )\n      }\n      bodyAsString = getContentWithReplacedForLoopsSyntax(bodyAsString)\n      \n      return JSON.parse(bodyAsString)\n    }\n\n    return undefined\n  }\n\n  return {\n    directoryPath,\n    route,\n    routeVars,\n    normalizedRoute,\n    isExtended,\n    filename,\n    fileContent,\n    stateVariable,\n    statusCode,\n    method,\n    body,\n    header,\n    getBody\n  }\n}\n","import { Application } from 'express'\n\nimport { INTERNAL_API_BASEURL } from './const'\nimport { IPrivateRouteState } from './Restapify'\nimport { Routes } from './Restapify'\nimport { IRouteState } from './Restapify'\nimport { HTTP_VERBS } from './const'\nimport { GetRoutes } from './types/internalApi'\nimport { getRoutesByFileOrder } from './utils'\n\n// I N T E R F A C E S\nexport interface InternalApiParams {\n  setState: (newState: IRouteState) => void\n  states: IPrivateRouteState[]\n  routes: Routes\n  port: number\n  baseUrl: string\n}\n\nconst getRoute = (route: string): string => {\n  return INTERNAL_API_BASEURL + route\n}\n\nexport const getInitialisedInternalApi = (\n  app: Application,\n  params: InternalApiParams\n): Application => {\n  const {\n    port,\n    baseUrl,\n    states,\n    routes,\n    setState\n  } = params\n\n  const getSortedRoutes = () : GetRoutes => {\n    const finalRoutes: GetRoutes = {}\n    const sortedRoutes = getRoutesByFileOrder(routes)\n\n    sortedRoutes.forEach(sortedRoute => {\n      const { route, method } = sortedRoute\n      if (finalRoutes[route] === undefined) {\n        finalRoutes[route] = {} as GetRoutes['blas']\n      }\n      finalRoutes[route][method] = routes[method][route]\n    })\n\n    return finalRoutes\n  }\n\n  const sortedRoutes = getSortedRoutes()\n\n  app.get(getRoute('/api'), (req, res): void => {\n    res.json({\n      port,\n      baseUrl,\n      routes: sortedRoutes\n    })\n  })\n\n  app.get(getRoute('/states'), (req, res): void => {\n    res.json(states)\n  })\n\n  app.put(getRoute('/states'), (req, res): void => {\n    const { route, state, method = 'GET' } = req.body\n    const isMethodValid = HTTP_VERBS.includes(method)\n\n    if (!route || !isMethodValid) {\n      res.status(401).end()\n    }\n\n    setState({\n      route,\n      state,\n      method\n    })\n\n    res.status(204).end()\n  })\n\n  return app\n}\n","import * as fs from 'fs'\nimport * as path from 'path'\n// @ts-ignore\nimport express, { Application, Request, Response, NextFunction } from 'express'\nimport cors from 'cors'\nimport * as http from 'http'\nimport * as chokidar from 'chokidar'\nimport nocache from 'nocache'\n\nimport {\n  HttpVerb,\n  RestapifyErrorCallbackParam,\n  RestapifyErrorName,\n  RestapifyEventCallback,\n  RestapifyEventCallbackParam,\n  RestapifyEventName\n} from './types'\nimport {\n  INTERNAL_BASEURL,\n} from './const'\n\nimport {\n  getRouteFiles,\n  getRoutesByFileOrder as getRoutesByFileOrderHelper,\n  getSortedRoutesSlug,\n  isJsonString,\n  routeResolve,\n  withoutUndefinedFromObject\n} from './utils'\nimport { getRoute, Route as RouteData } from './getRoute'\nimport { getInitialisedInternalApi } from './internalApi'\nimport chalk from 'chalk'\n\nconst DEFAULT_PORT = 4001\n\ntype EventCallbackStore = {\n  [event in RestapifyEventName]?: RestapifyEventCallback[]\n}\ntype ListedFiles = {\n  [filename: string]: string\n}\n\nclass Restapify {\n  private eventCallbacksStore: EventCallbackStore = {}\n  private app: Application\n  private server: http.Server\n  private chokidarWatcher: chokidar.FSWatcher\n  private listedRouteFiles: ListedFiles = {}\n  public routes: Routes = {\n    GET: {}, POST: {}, DELETE: {}, PUT: {}, PATCH: {}\n  }\n  public rootDir: string\n  public port: number\n  public publicPath: string\n  public states: IPrivateRouteState[] = []\n  public hotWatch: boolean\n  public proxyBaseUrl: string\n\n  constructor({\n    rootDir,\n    port = DEFAULT_PORT,\n    baseUrl = '/',\n    states = [],\n    hotWatch = true,\n    proxyBaseUrl = ''\n  }: IRestapifyParams) {\n    this.rootDir = rootDir\n    this.port = port\n    this.publicPath = baseUrl\n    this.hotWatch = hotWatch\n    this.proxyBaseUrl = proxyBaseUrl\n    this.states = states.filter(state => {\n      return state.state !== undefined\n    }) as IPrivateRouteState[]\n  }\n\n  private readonly listRouteFiles = (): void => {\n    this.listedRouteFiles = getRouteFiles(this.rootDir)\n  }\n\n  private readonly configHotWatch = (): void => {\n    if (this.hotWatch) {\n      this.chokidarWatcher = chokidar.watch(this.rootDir, {\n        ignoreInitial: true\n      })\n\n      const events: Array<'change' | 'unlink'> = ['change', 'unlink']\n\n      events.forEach(event => {\n        this.chokidarWatcher.on(event, () => {\n          this.restartServer({ hard: true })\n        })\n      })\n    }\n  }\n\n  private readonly configServer = (): void => {\n    this.app = express()\n    this.server = http.createServer(this.app)\n\n    // Add middleware to parse request's body\n    this.app.use(express.json())\n    this.app.use(nocache())\n    this.app.set('etag', false)\n\n    // Handle CORS\n    this.app.use(cors())\n    this.app.use((req: Request, res: Response, next: NextFunction) => {\n      res.set('Cache-Control', 'no-store')\n      next()\n    })\n\n    this.handleHttpServerErrors()\n    this.configRoutesFromListedFiles()\n    this.serveRoutes()\n\n    this.app.use((req: Request, res: Response, next: NextFunction): void => {\n      (async () => {\n        if (req.originalUrl === \"/\" || req.originalUrl === \"/favicon.ico\") {\n          return next();\n        }\n\n        try {\n          if (this.proxyBaseUrl != '') {\n            console.log(\n              `No matching local route for ${req.method} ${chalk.blue(\n                req.originalUrl\n              )}, forwarding...`\n            );\n            const proxyUrl = `${this.proxyBaseUrl}${req.originalUrl}`;\n            const forwardedHeaders: Record<string, string> = Object.entries(req.headers).reduce(\n              (acc, [key, value]) => {\n                if (typeof value === \"string\") {\n                  acc[key] = value;\n                } else if (Array.isArray(value)) {\n                  acc[key] = value.join(\", \");\n                }\n                return acc;\n              },\n              {} as Record<string, string>\n            );\n\n            const proxyResponse = await fetch(proxyUrl, {\n              method: req.method,\n              headers: forwardedHeaders,\n              body: [\"GET\", \"HEAD\"].includes(req.method) ? undefined : req.body,\n            });\n\n            res.appendHeader(\"response-was-proxied\", \"true\");\n\n            const proxyText = await proxyResponse.text();\n            let proxyData;\n            try {\n              proxyData = JSON.parse(proxyText);\n            } catch (jsonError) {\n              console.error(\n                `Failed to parse JSON from proxy ${this.proxyBaseUrl} for ${req.originalUrl}:`,\n                jsonError\n              );\n              return res\n                .status(500)\n                .send(\n                  `Invalid JSON received from proxy ${this.proxyBaseUrl} request to ${req.originalUrl}. Response was: '${proxyText}'`\n                );\n            }\n\n            res.status(proxyResponse.status).json(proxyData);\n            console.log(\n              `Served ${chalk.italic(\"forwarded content\")} for ${chalk.blue(\n                req.originalUrl\n              )} with status ${proxyResponse.status} from ${this.proxyBaseUrl}.`\n            );\n          }\n        } catch (err) {\n          console.error(\"Proxy request failed:\", err);\n          res\n            .status(500)\n            .send(\n              `Failed to get result from proxy request to ${req.originalUrl}. Error was ${err}`\n            );\n        }\n      })().catch(next);\n    });\n\n  }\n\n\n  private readonly configInternalApi = (): void => {\n    const {\n      routes,\n      states,\n      port,\n      publicPath: baseUrl\n    } = this\n    this.app = getInitialisedInternalApi(this.app, {\n      port,\n      baseUrl,\n      routes,\n      states,\n      setState: this.setState\n    })\n  }\n\n  private readonly handleHttpServerErrors = (): void => {\n    this.server.on('error', (e: NodeJS.ErrnoException) => {\n      if (e.code === 'EADDRINUSE') {\n        const error: RestapifyErrorName = 'MISS:PORT'\n        this.executeCallbacksForSingleEvent('error', { error })\n      } else {\n        console.log(`Unknown error ${e.code}`)\n      }\n    })\n  }\n\n  private readonly restartServer = (options?: IRunOptions): void => {\n    this.executeCallbacks('server:restart')\n    this.closeServer()\n    this.customRun({ ...options, hard: false })\n  }\n\n  private readonly checkpublicPath = (): void => {\n    if (this.publicPath.startsWith(INTERNAL_BASEURL)) {\n      const error: RestapifyErrorName = 'INV:API_BASEURL'\n      const errorObject = { error }\n      throw new Error(JSON.stringify(errorObject))\n    }\n  }\n\n  private readonly checkRootDirectory = (): void => {\n    const folderExists = fs.existsSync(this.rootDir)\n    if (!folderExists) {\n      const error: RestapifyErrorName = 'MISS:ROOT_DIR'\n      const errorObject = { error }\n      throw new Error(JSON.stringify(errorObject))\n    }\n  }\n\n  private readonly checkJsonFiles = (): void => {\n    Object.keys(this.listedRouteFiles).forEach(routeFilePath => {\n      const routeFileContent = this.listedRouteFiles[routeFilePath]\n      const isJsonValidResponse = isJsonString(routeFileContent)\n      // eslint-disable-next-line max-len\n      if (isJsonValidResponse !== true) {\n        const error: RestapifyErrorName = 'INV:JSON_FILE'\n        const errorObject = {\n          error,\n          message: `Invalid json file ${routeFilePath}: ${isJsonValidResponse}`\n        }\n        throw new Error(JSON.stringify(errorObject))\n      }\n    })\n  }\n\n  private readonly configRoutesFromListedFiles = (): void => {\n    Object.keys(this.listedRouteFiles).forEach(routeFilePath => {\n      const routeData = getRoute(\n        routeFilePath,\n        this.rootDir,\n        this.listedRouteFiles[routeFilePath]\n      )\n      const {\n        route,\n        method,\n        stateVariable,\n        body,\n        getBody,\n        header,\n        isExtended,\n        statusCode,\n        fileContent\n      } = routeData\n\n      routeData.directoryPath = path.dirname(routeFilePath)\n\n      const routeExist = this.routes[method][route] !== undefined\n\n      if (!routeExist) {\n        this.routes[method][route] = {} as RouteData\n      }\n\n\n      if (stateVariable) {\n        if (this.routes[method][route] === undefined) {\n          this.routes[method][route] = {} as RouteData\n        }\n\n        if (this.routes[method][route].states === undefined) {\n          this.routes[method][route].states = {}\n        }\n\n        // @ts-ignore\n        this.routes[method][route].states[stateVariable] = withoutUndefinedFromObject({\n          body,\n          fileContent,\n          header,\n          isExtended,\n          statusCode,\n          getBody\n        })\n      } else {\n        this.routes[method][route] = { ...this.routes[method][route], ...routeData }\n      }\n    })\n  }\n\n  private readonly getRouteData = (\n    method: HttpVerb,\n    route: string\n  ): RouteData | null => {\n    if (!this.routes[method][route]) {\n      return null\n    }\n\n    const routeData = this.routes[method][route]\n    const matchingState = this.states.find(state => {\n      return state.route === route\n        && (state.method === method\n          || (state.method === undefined && method === 'GET'))\n    })\n\n    if (matchingState && routeData.states) {\n      const { state } = matchingState\n\n      return { ...routeData, ...routeData.states[state] }\n    }\n\n    return routeData\n  }\n\n  private readonly serveRoutes = (): void => {\n    (Object.keys(this.routes) as HttpVerb[]).forEach(method => {\n      const routesSlug = Object.keys(this.routes[method])\n      const sortedRoutesSlug = getSortedRoutesSlug(routesSlug)\n\n      sortedRoutesSlug.forEach(route => {\n        const routeData = this.getRouteData(method, route)\n\n        if (routeData) {\n          this.serveRoute(routeData)\n        }\n      })\n    })\n  }\n\n  private readonly getUserId = (authzValue: string): string => {\n    try {\n      authzValue = authzValue.replace(\"Bearer \", \"\")\n      const base64Url = authzValue.split('.')[1]\n      const base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/')\n      const jsonPayload = decodeURIComponent(\n        atob(base64)\n          .split('')\n          .map(function (c) {\n            return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2)\n          })\n          .join('')\n      )\n\n      return JSON.parse(jsonPayload).sub;\n    } catch (error) {\n      return \"\";\n    }\n  }\n\n  private readonly serveRoute = (routeData: RouteData): void => {\n    let {\n      normalizedRoute,\n      routeVars,\n      statusCode,\n      header\n    } = routeData\n\n    normalizedRoute = routeResolve(this.publicPath, normalizedRoute)\n\n    const responseCallback = async (req: Request, res: Response): Promise<void> => {\n      res.status(statusCode)\n      res.header('Content-Type', 'application/json; charset=utf-8')\n\n      if (header) {\n        res.header(header)\n      }\n\n      // 1. Check for custom header\n      const userId = this.getUserId(req.headers['authorization'] ?? '') // or whatever header key\n      if (userId && routeData.directoryPath) {\n        // 2. See if a file like \"user-id-guid.json\" exists\n        const customJsonFilename = `${userId}.json`\n        const customFilePath = path.join(routeData.directoryPath, customJsonFilename)\n        if (fs.existsSync(customFilePath)) {\n          // 3. Serve that file’s content\n          const customFileContent = JSON.parse(fs.readFileSync(customFilePath, 'utf8'))\n          res.send(JSON.stringify(customFileContent))\n          return\n        }\n      }\n\n      let vars: { [key: string]: string } = {}\n      routeVars.forEach(variable => {\n        vars[variable] = req.params[variable]\n      })\n\n      const queryStringVarsToReplace = Object.fromEntries(\n        Object.entries(req.query).map(([key, value]) => [key, String(value)])\n      );\n      const responseBody = routeData.getBody(vars, queryStringVarsToReplace)\n\n      if (responseBody) {\n        res.send(JSON.stringify(responseBody))\n      } else {\n        res.end()\n      }\n\n      console.log(`Served content for ${chalk.blue(normalizedRoute)} ${userId ? ('for user ' + userId) : ''}`);\n    }\n\n    this.listenRoute(routeData.method, normalizedRoute, responseCallback)\n  }\n\n  private readonly listenRoute = (\n    method: HttpVerb,\n    route: string,\n    callback: (req: Request, res: Response) => void\n  ): void => {\n    switch (method) {\n      case 'POST':\n        this.app.post(route, callback)\n        break\n\n      case 'DELETE':\n        this.app.delete(route, callback)\n        break\n\n      case 'PUT':\n        this.app.put(route, callback)\n        break\n\n      case 'PATCH':\n        this.app.patch(route, callback)\n        break\n\n      case 'GET': default:\n        this.app.get(route, callback)\n        break\n    }\n  }\n\n  private readonly startServer = (): void => {\n    this.server.listen(this.port)\n  }\n\n  private readonly customRun = (options: IRunOptions = {}): void => {\n    const {\n      hard = true,\n      startServer = true,\n      hotWatch = true\n    } = options\n\n    try {\n      if (hard) {\n        this.configEventsCallbacks()\n        this.checkpublicPath()\n        this.checkRootDirectory()\n      }\n\n      this.listRouteFiles()\n      this.checkJsonFiles()\n      this.configRoutesFromListedFiles()\n\n      if (startServer) {\n        this.configServer()\n        this.configInternalApi()\n      }\n\n      if (hard && hotWatch) this.configHotWatch()\n      if (hard && startServer) this.executeCallbacks('server:start')\n\n      if (startServer) this.startServer()\n\n      if (hard) this.executeCallbacks('start')\n    } catch (error) {\n      if (isJsonString(error.message)) {\n        const { error: errorId, message } = JSON.parse(error.message)\n        this.executeCallbacks('error', { error: errorId, message })\n      } else {\n        this.executeCallbacks('error', { error: 'ERR', message: error.message })\n      }\n    }\n  }\n\n  private readonly configEventsCallbacks = (): void => {\n    this.onError(({ error }) => {\n      if (error === 'MISS:PORT') {\n        this.port += 1\n        this.restartServer({ hard: true })\n      }\n    })\n  }\n\n  private readonly removeState = (route: string, method?: HttpVerb): void => {\n    this.states = this.states.filter(state => {\n      return state.route !== route && state.method !== method\n    })\n  }\n\n  private readonly createSingleEventStoreIfMissing = (eventName: RestapifyEventName): void => {\n    if (this.eventCallbacksStore[eventName] === undefined) {\n      this.eventCallbacksStore[eventName] = []\n    }\n  }\n\n  private readonly addSingleEventCallbackToStore = (\n    event: RestapifyEventName,\n    callback: RestapifyEventCallback\n  ): void => {\n    this.createSingleEventStoreIfMissing(event)\n\n    // @ts-ignore\n    this.eventCallbacksStore[event].push(callback)\n  }\n\n  private readonly addEventCallbackToStore = (\n    event: RestapifyEventName | RestapifyEventName[],\n    callback: RestapifyEventCallback\n  ): void => {\n    if (Array.isArray(event)) {\n      event.forEach(eventName => {\n        this.addSingleEventCallbackToStore(eventName, callback)\n      })\n    } else {\n      this.addSingleEventCallbackToStore(event, callback)\n    }\n  }\n\n  private readonly executeCallbacksForSingleEvent = (\n    event: RestapifyEventName,\n    params?: RestapifyEventCallbackParam\n  ): void => {\n    const callbacks = this.eventCallbacksStore[event]\n    if (callbacks) {\n      callbacks.forEach(callback => {\n        if (params) {\n          callback(params)\n        } else {\n          callback()\n        }\n      })\n    }\n  }\n\n  private readonly executeCallbacks = (\n    event: RestapifyEventName | RestapifyEventName[],\n    params?: RestapifyEventCallbackParam\n  ): void => {\n    if (Array.isArray(event)) {\n      event.forEach(eventName => {\n        this.executeCallbacksForSingleEvent(eventName, params)\n      })\n    } else {\n      this.executeCallbacksForSingleEvent(event, params)\n    }\n  }\n\n  private readonly closeServer = (): void => {\n    this.server.close()\n  }\n\n  private readonly closeChokidarWatcher = (): void => {\n    this.chokidarWatcher.close()\n  }\n\n  public setState = (newState: IRouteState): void => {\n    if (newState.state) {\n      const actualStateIndex = this.states.findIndex(state => {\n        return state.route === newState.route && state.method === newState.method\n      })\n      const stateExist = actualStateIndex !== -1\n\n      if (stateExist) {\n        this.states[actualStateIndex] = newState as IPrivateRouteState\n      } else {\n        this.states.push(newState as IPrivateRouteState)\n      }\n    } else {\n      this.removeState(newState.route, newState.method)\n    }\n\n    this.restartServer()\n  }\n\n  public getServedRoutes = (): {\n    route: string,\n    method: HttpVerb\n  }[] => {\n    this.customRun({\n      startServer: false,\n      hotWatch: false,\n      hard: false\n    })\n    return getRoutesByFileOrderHelper(this.routes)\n  }\n\n  public close = (): void => {\n    if (this.server) this.closeServer()\n    if (this.hotWatch && this.chokidarWatcher) this.closeChokidarWatcher()\n  }\n\n  public on = (\n    event: RestapifyEventName | RestapifyEventName[],\n    callback: RestapifyEventCallback\n  ): void => {\n    this.addEventCallbackToStore(event, callback)\n  }\n\n  public onError = (callback: (params: RestapifyErrorCallbackParam) => void): void => {\n    this.addSingleEventCallbackToStore('error', callback)\n  }\n\n  public run = (): void => {\n    this.customRun()\n  }\n}\n\nexport default Restapify;\n\nexport type Routes = {\n  [method in HttpVerb]: { [url: string]: RouteData; };\n};\n\n// I N T E R F A C E S\nexport interface IRouteState {\n  route: string;\n  state?: string;\n  method?: HttpVerb;\n}\nexport interface IRunOptions {\n  hard?: boolean;\n  startServer?: boolean;\n  hotWatch?: boolean;\n}\nexport interface IRestapifyParams {\n  rootDir: string;\n  port?: number;\n  baseUrl?: string;\n  states?: IRouteState[];\n  hotWatch?: boolean;\n  proxyBaseUrl?: string\n}\n\nexport interface IPrivateRouteState extends Omit<IRouteState, 'state'> {\n  state: string\n}\n","import chalk from 'chalk'\nimport boxen from 'boxen'\nimport { Validator, ValidatorResult } from 'jsonschema'\n\nimport Restapify, { RestapifyParams, HttpVerb, RestapifyErrorCallbackParam } from '../index'\n\nexport const getMethodOutput = (method: HttpVerb): string => {\n  let methodOutput\n\n  switch (method) {\n  case 'DELETE':\n    methodOutput = chalk.red\n    break\n  case 'POST':\n    methodOutput = chalk.yellow\n    break\n  case 'PUT':\n    methodOutput = chalk.blue\n    break\n  case 'PATCH':\n    methodOutput = chalk.gray\n    break\n\n  default: case 'GET':\n    methodOutput = chalk.green\n    break\n  }\n\n  let methodName = method\n  let methodNameLength = method.length\n\n  for (let index = 0; index < (6 - methodNameLength); index += 1) {\n    methodName += ' '\n  }\n\n  methodOutput = methodOutput.bold(`${methodName}`)\n\n  return methodOutput\n}\n\nexport const consoleError = (message: string): void => {\n  const errorPrepend = chalk.red.bold.underline('❌ERROR:')\n  console.log(`${errorPrepend} ${message}`)\n}\n\nexport const getInstanceOverviewOutput = (port: number, publicPath: string, proxyBaseUrl: string): string => {\n  if (!publicPath.startsWith('/')) {\n    publicPath = `/${publicPath}`\n  }\n\n  const runningTitle = chalk.magenta('🚀 Restapify is running:')\n  const publicPathTitle = chalk.bold('- 📦API entry point:')\n  const publicPathLink = chalk.blueBright(`http://localhost:${port}${publicPath}`)\n  const publicPathOutput = `${publicPathTitle} ${publicPathLink}`\n  const proxyBaseUrlOutput = proxyBaseUrl != '' ? `\\n- Fallback proxy: ${chalk.blueBright(proxyBaseUrl)}` : ''\n  \n  const killProcessInfo = chalk.yellowBright('Use Ctrl+C to quit this process')\n  return boxen(`${runningTitle}\\n\\n${publicPathOutput}${proxyBaseUrlOutput}\\n\\n${killProcessInfo}`, { padding: 1, borderColor: 'magenta' })\n}\n\nexport const onRestapifyInstanceError = (\n  errorObject: RestapifyErrorCallbackParam,\n  instanceData: Pick<Restapify, 'publicPath' | 'port' | 'rootDir'>\n): void => {\n  const { error, message } = errorObject\n  const { rootDir, port, publicPath } = instanceData\n\n  if (error.startsWith('MISS:ROOT_DIR')) {\n    consoleError(`The given folder ${rootDir} doesn't exist!`)\n  } else if (error.startsWith('MISS:PORT')) {\n    consoleError(`port ${port} is already in use!`)\n  } else if (error.startsWith('INV:API_BASEURL')) {\n    consoleError(`Impossible to use ${publicPath} as the API base URL since it's already needed for internal purposes!`)\n  } else if (error.startsWith('INV:JSON_FILE')) {\n    consoleError(message as string)\n  }\n}\n\nexport const getRoutesListOutput = (\n  routesList: { route: string; method: HttpVerb; }[],\n  publicPath: string\n): string => {\n  let output = ''\n\n  routesList.forEach(servedRoute => {\n    let methodOutput = getMethodOutput(servedRoute.method)\n\n    output += `\\n${methodOutput} ${servedRoute.route}`\n  })\n\n  return output\n}\n\nexport const runServer = (config: RestapifyParams): void => {\n  const rpfy = new Restapify(config)\n\n  rpfy.on('server:start', () => {\n    console.log(`\\n🏗 Try to serve on port ${rpfy.port}`)\n  })\n\n  rpfy.onError((error: RestapifyErrorCallbackParam) => {\n    onRestapifyInstanceError(error, {\n      rootDir: rpfy.rootDir,\n      publicPath: rpfy.publicPath,\n      port: rpfy.port\n    })\n  })\n\n  rpfy.on('start', () => {\n    const servedRoutesOutput = getRoutesListOutput(\n      rpfy.getServedRoutes(),\n      rpfy.publicPath\n    )\n\n    console.log(servedRoutesOutput)\n    console.log('\\n')\n    console.log(getInstanceOverviewOutput(\n      rpfy.port,\n      rpfy.publicPath,\n      rpfy.proxyBaseUrl\n    ))\n  })\n\n  rpfy.on('server:restart', () => {\n    console.log(chalk.green('✅ API updated!'))\n  })\n\n  rpfy.run()\n}\n\nexport const validateConfig = (config: object): ValidatorResult => {\n  const jsonValidor = new Validator()\n  const CONFIG_FILE_SCHEMA = {\n    type: 'object',\n    rootDir: { type: 'string' },\n    publicPath: { type: 'string' },\n    port: { type: 'number' },\n    states: {\n      properties: {\n        route: 'string',\n        method: 'string',\n        state: 'string'\n      },\n      required: ['route', 'method', 'state']\n    },\n    required: ['rootDir']\n  }\n\n  return jsonValidor.validate(config, CONFIG_FILE_SCHEMA)\n}\n","import Restapify from '../../Restapify'\n\nimport { getRoutesListOutput, onRestapifyInstanceError } from '../utils'\n\nexport const listRoutes = (rootDir: string): void => {\n  const rpfy = new Restapify({\n    rootDir,\n    hotWatch: false\n  })\n\n  rpfy.onError((error) => {\n    onRestapifyInstanceError(error, {\n      rootDir: rpfy.rootDir,\n      publicPath: rpfy.publicPath,\n      port: rpfy.port\n    })\n  })\n\n  const servedRoutesOutput = getRoutesListOutput(\n    rpfy.getServedRoutes(),\n    rpfy.publicPath\n  )\n\n  console.log(servedRoutesOutput)\n}\n","import { RestapifyParams } from '../../index'\n\nimport { runServer } from '../utils'\n\nexport const startServer = (options: RestapifyParams): void => {\n  runServer(options)\n}\n","function _objectWithoutPropertiesLoose(r, e) {\n  if (null == r) return {};\n  var t = {};\n  for (var n in r) if ({}.hasOwnProperty.call(r, n)) {\n    if (-1 !== e.indexOf(n)) continue;\n    t[n] = r[n];\n  }\n  return t;\n}\nexport { _objectWithoutPropertiesLoose as default };","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nfunction _objectWithoutProperties(e, t) {\n  if (null == e) return {};\n  var o,\n    r,\n    i = objectWithoutPropertiesLoose(e, t);\n  if (Object.getOwnPropertySymbols) {\n    var n = Object.getOwnPropertySymbols(e);\n    for (r = 0; r < n.length; r++) o = n[r], -1 === t.indexOf(o) && {}.propertyIsEnumerable.call(e, o) && (i[o] = e[o]);\n  }\n  return i;\n}\nexport { _objectWithoutProperties as default };","import * as path from 'path'\nimport { ValidationError } from 'jsonschema'\n\nimport { RestapifyParams } from '../../index'\nimport { consoleError, runServer, validateConfig } from '../utils'\n\nexport const outputInvalidFilePathError = (filePath: string): void => {\n  consoleError(`The given path ${filePath} is not a valid configuration file!`)\n}\n\nconst outputConfigErrors = (errors: ValidationError[]): void => {\n  consoleError('Invalid configuration file:')\n\n  errors.forEach(error => {\n    console.log(`- ${error.message}`)\n  })\n}\n\nexport const startServerFromConfig = (configFilePath: string, config: RestapifyParams): void => {\n  try {\n    const validatedConfig = validateConfig(config)\n\n    if (!validatedConfig.valid) {\n      outputConfigErrors(validatedConfig.errors)\n      return\n    }\n\n    const { rootDir, ...configsRest } = config\n\n    runServer({\n      rootDir: path.join(path.dirname(configFilePath), rootDir),\n      ...configsRest\n    })\n  } catch (error) {\n    outputInvalidFilePathError(configFilePath)\n  }\n}\n","import * as fs from 'fs'\nimport * as path from 'path'\nimport { Command } from 'commander'\n\nimport * as packageJson from '../../package.json'\n\nimport { listRoutes } from './run/listRoutes'\nimport { startServer } from './run/startServer'\nimport { outputInvalidFilePathError, startServerFromConfig } from './run/startServerFromConfig'\nimport { consoleError } from './utils'\n\nexport const cli = (cliArgs: string[]): void => {\n  const program = new Command()\n\n  program\n    .version(packageJson.version, '-v, --version', 'output the current version')\n    .option('-p, --port <number>', 'port to serve Restapify instance')\n    .option('-b, --baseUrl <string>', 'base url to serve the API')\n    \n  program\n    .command('serve <rootDir> [proxyBaseUrl]')\n    .description('serve a mocked API from folder <rootDir> with an optional [proxyBaseUrl]')\n    .action((rootDir, proxyBaseUrl = 'https://public-web-api-dev.trr.se'): void => {\n        startServer({\n          rootDir: path.resolve(rootDir),\n          baseUrl: '/',\n          port: 4001,\n          proxyBaseUrl\n        })\n    })\n\n  program\n    .command('list <rootDir>')\n    .description('list all routes to serve from folder <rootDir>')\n    .action((rootDir): void => {\n      listRoutes(path.resolve(rootDir))\n    })\n\n  program\n    .arguments('[pathToConfig]')\n    .action((pathToConfig: string = './restapify.config.json'): void => {\n    \n      const configPath = path.resolve(pathToConfig)\n      const configFileExists = fs.existsSync(configPath)\n\n      if (!configFileExists) {\n        consoleError(`The given configuration file ${pathToConfig} doesn't exist!`)\n        return\n      }\n\n      const isConfigJs = pathToConfig.endsWith('.js')\n      if (isConfigJs) {\n        // eslint-disable-next-line global-require\n        const config = require(configPath)\n        startServerFromConfig(configPath, config)\n        return\n      }\n\n      try {\n        startServerFromConfig(configPath, JSON.parse(fs.readFileSync(path.resolve(pathToConfig), 'utf-8')))\n      } catch (error) {\n        outputInvalidFilePathError(configPath)\n      }\n    })\n\n  program.parse(cliArgs)\n}\n","import type { IPrivateRouteState, IRestapifyParams, IRouteState } from './Restapify'\n\nimport Restapify from './Restapify'\nimport Routes from './Restapify'\nimport { cli } from './cli/cli'\n\nexport * from './types/index'\nexport * from './Restapify'\nexport {\n  cli,\n  IRestapifyParams as RestapifyParams,\n  IRouteState as RouteState,\n  Routes,\n  IPrivateRouteState as PrivateRouteState\n}\n\nexport default Restapify\n\nconst restapify = new Restapify({\n  rootDir: './routes',\n  port: 4001,\n  baseUrl: '/',\n  states: [],\n  hotWatch: true,\n  proxyBaseUrl: ''\n})\n\nrestapify.run()\n"],"names":["arrayLikeToArray","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","_typeof","require$$0","CURRENT_LOCATION_ROUTE_SELECTOR","HTTP_VERBS","INTERNAL_BASEURL","INTERNAL_API_BASEURL","concat","CASTING_OPERATORS","NUMBER_CAST_INDICATOR","BOOLEAN_CAST_INDICATOR","EMPTY_BODY_SYNTAX","HEADER_SYNTAX","BODY_SYNTAX","QUERY_STRING_VAR_MATCHER","QS_VAR_DEFAULT_SEPARATOR","FOR_LOOP_SYNTAX_MATCHER","FOR_LOOP_SYNTAX_PREFIX","FOR_LOOP_SYNTAX_SUFFIX","arrayWithoutHoles","iterableToArray","nonIterableSpread","getDirs","p","fs","readdirSync","filter","f","statSync","path","join","isDirectory","getFiles","isFile","replaceAll","str","find","replace","split","getVarsInPath","pathParam","vars","endsWith","slice","length","explodedPath","forEach","pathElement","isVar","startsWith","push","isHttpVerb","includes","isStateVariable","isNumeric","Number","isNaN","parseFloat","routeResolve","_len","arguments","routes","Array","_key","finalRoute","route","routeId","_routes","hasPreviousRouteFinalSlash","hasRouteFirstSlash","withoutUndefinedFromObject","obj","Object","keys","key","undefined","getRoutesByFileOrder","orderedRoutes","routesLink","method","_toConsumableArray","Set","sort","routeLink","getRouteFiles","rootDir","files","dirNames","fileNames","filename","isJson","filePath","resolve","readFileSync","dir","isJsonString","JSON","parse","e","message","getVarCastSyntax","variable","type","typeCastIndicator","number","replaceAllCastedVar","content","value","operator","getSortedRoutesSlug","routesSlug","a","b","splittedA","splittedB","lastASlugPart","lastBSlugPart","aPrefix","bPrefix","areSlugsOnSameDeepness","isAFinalSlugVar","isBFinalSlugVar","isBMoreDeep","ELMT_BETWEEN_PARENTHESES_MATCHER","isStatementObjectValid","every","getForLoopSyntax","forLoopObject","x","sequence","statement","getForLoopSyntaxInContent","matches","matchAll","map","m","getStringifiedRangeFunctionParams","stringifiedRange","paramsMatch","match","paramsMatchString","splitedParams","substring","start","end","step","getArrayFromRangeString","rangeParams","range","getSequenceArrayAsArray","getSequenceArray","isSequenceAnArray","isSequenceRange","getForLoopSyntaxResult","forLoopSyntax","sequenceArray","resultArray","i","forLoopResult","isStatementValid","error","errorObject","stringify","Error","toString","getContentWithReplacedForLoopsSyntax","forLoops","forLoop","getQueryStringVarSyntax","data","defaultValue","getFilenameFromFilePath","_filePath$split$slice","_filePath$split$slice2","_slicedToArray","getRouteFromFilePath","routeWithoutFilename","firstParamInFilename","getNormalizedRoute","getResponseStatusCodeInFilename","filenameElmts","potentialStatusCodeElement","elmtToTest","getStateVariableInFilename","stateVariable","explodedFilename","filenameElement","isStateVar","getHttpMethodInFilename","potentialHttpVerbElement","httpVerb","elmt","getQueryStringVarData","queryStringSyntax","_queryStringSyntax$sp","_queryStringSyntax$sp2","getQueryStringVarsInContent","matchingVars","from","getContentWithReplacedVars","queryStringVars","getEscapedVar","getVarsToEscape","varsToEscape","getContentWithSanitizedEscapedVars","contentToSanitize","escapedVar","getContentWithUnsanitizedEscapedVars","contentToUnsanitize","queryStringVarsInContent","_ref","replaceValue","isStructureExtended","jsonContent","isBodyEmpty","body","stringifiedEmptyBodySyntax","getRoute","entryFolderPath","fileContent","relativeFilePath","routeVars","normalizedRoute","statusCode","directoryPath","dirname","isExtended","header","getBodyValue","getBody","varsToReplace","queryStringVarsToReplace","bodyAsString","getInitialisedInternalApi","app","params","port","baseUrl","states","setState","getSortedRoutes","finalRoutes","sortedRoutes","sortedRoute","get","req","res","json","put","_req$body","state","_req$body$method","isMethodValid","status","DEFAULT_PORT","Restapify","_createClass","_this","_ref$port","_ref$baseUrl","_ref$states","_ref$hotWatch","hotWatch","_ref$proxyBaseUrl","proxyBaseUrl","_classCallCheck","_defineProperty","GET","POST","DELETE","PUT","PATCH","listedRouteFiles","chokidarWatcher","chokidar","watch","ignoreInitial","events","event","on","restartServer","hard","express","server","http","createServer","use","nocache","set","cors","next","handleHttpServerErrors","configRoutesFromListedFiles","serveRoutes","_asyncToGenerator","_regeneratorRuntime","mark","_callee","proxyUrl","forwardedHeaders","proxyResponse","proxyText","proxyData","wrap","_callee$","_context","prev","originalUrl","abrupt","console","log","chalk","blue","entries","headers","reduce","acc","_ref3","_ref4","isArray","fetch","sent","appendHeader","text","t0","send","italic","t1","stop","publicPath","code","executeCallbacksForSingleEvent","options","executeCallbacks","closeServer","customRun","_objectSpread","folderExists","existsSync","routeFilePath","routeFileContent","isJsonValidResponse","routeData","routeExist","matchingState","sortedRoutesSlug","getRouteData","serveRoute","authzValue","base64Url","base64","jsonPayload","decodeURIComponent","atob","c","charCodeAt","sub","responseCallback","_ref5","_callee2","_req$headers$authoriz","userId","customJsonFilename","customFilePath","customFileContent","responseBody","_callee2$","_context2","getUserId","fromEntries","query","_ref6","_ref7","String","_x","_x2","apply","listenRoute","callback","post","patch","listen","_options$hard","_options$startServer","startServer","_options$hotWatch","configEventsCallbacks","checkpublicPath","checkRootDirectory","listRouteFiles","checkJsonFiles","configServer","configInternalApi","configHotWatch","_JSON$parse","errorId","onError","_ref8","eventName","eventCallbacksStore","createSingleEventStoreIfMissing","addSingleEventCallbackToStore","callbacks","close","newState","actualStateIndex","findIndex","stateExist","removeState","getRoutesByFileOrderHelper","closeChokidarWatcher","addEventCallbackToStore","getMethodOutput","methodOutput","red","yellow","gray","green","methodName","methodNameLength","index","bold","consoleError","errorPrepend","underline","getInstanceOverviewOutput","runningTitle","magenta","publicPathTitle","publicPathLink","blueBright","publicPathOutput","proxyBaseUrlOutput","killProcessInfo","yellowBright","boxen","padding","borderColor","onRestapifyInstanceError","instanceData","getRoutesListOutput","routesList","output","servedRoute","runServer","config","rpfy","servedRoutesOutput","getServedRoutes","run","validateConfig","jsonValidor","Validator","CONFIG_FILE_SCHEMA","properties","required","validate","listRoutes","objectWithoutPropertiesLoose","outputInvalidFilePathError","outputConfigErrors","errors","startServerFromConfig","configFilePath","validatedConfig","valid","configsRest","_objectWithoutProperties","_excluded","cli","cliArgs","program","Command","version","packageJson","option","command","description","action","pathToConfig","configPath","configFileExists","isConfigJs","require","restapify"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,17,18,19,20,29,30]}